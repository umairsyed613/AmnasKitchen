@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<nav class="navbar navbar-expand-lg navbar-dark bg-ak justify-content-between">
    <a class="navbar-brand brandText" href="/">
        <img src="images/LogoMakr_5qCGuM.png" alt="logo" height="24" class="d-inline-block align-top" />
        Apna Barwarchi Khana
    </a>

    <button id="navBarBtn" class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/managecategory">ManageCategories</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/createrecipe">CreateRecipe</a>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="/" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Categories
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class="dropdown-item" href="/">Action</a>
                    <a class="dropdown-item" href="/">Another action</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="/">Something else here</a>
                </div>
            </li>
        </ul>
        <form class="form-inline my-2 my-lg-0">
            <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
        </form>
    </div>
</nav

@code
{
    protected override async Task OnInitializedAsync()
    {
        navigationManager.LocationChanged += OnLocationChanges;

        await base.OnInitializedAsync();
    }

    async void OnLocationChanges(object sender, LocationChangedEventArgs e)
    {
        await JSRuntime.InvokeVoidAsync("toggleNavBar");

        await SetActiveOnNavBar();
    }

    private async Task SetActiveOnNavBar()
    {
        await JSRuntime.InvokeVoidAsync("SetNavBarActive");
    }
} 