@page "/viewrecipe/"
@page "/viewrecipe/{id}"

@inject IJSRuntime JsRuntime
@inject NavigationManager navigationManager
@inject AbkFetchService AbkFetchService
@inject HttpClient Http
@using ApnaBawarchiKhana.Shared
@inject IToastService toastService
<!-- Recipe Section
 =================== -->

@if (recipe == null)
{
    <div class="d-flex flex-row w-100 justify-content-center mb-5">
        <div class="loader"></div>
    </div>
}
else
{
    <section id="recipe" class="h-100 w-100 rounded mb-4">
        <div id="recipeData">
            <div class="row">
                <!-- Title -->
                <div class="col-12">
                    <h2 class="mb-2 mt-2">@recipe.Title</h2>
                </div>
            </div>
            <hr class="mb-2" />
            <div class="mt-2 row vertical-align">
                <div class="col-12 p-0">
                    <!-- Picture -->
                    <div class="col-lg-6 pull-left">
                        @*<img src="images/bbq-pork-ribs.jpg" alt="bbq-pork-ribs" class="d-flex img-fluid w-100 img-thumbnail img-recipe" />*@
                        <div id="ViewRecipeCarousal" class="carousel slide carousel-fade" data-ride="carousel">
                            <div class="carousel-inner">
                                @{
                                    int count = 0;
                                    foreach (var i in recipe.RecipeImages)
                                    {
                                        if (count == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img src="data:image/bmp;base64, @(Convert.ToBase64String(i.UploadedImage.ImageData))" alt="@($"{recipe.Title}")" loading="lazy" class="d-flex img-fluid w-100 img-thumbnail img-recipe recipeImgFluidHeight" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img src="data:image/bmp;base64, @(Convert.ToBase64String(i.UploadedImage.ImageData))" alt="@($"{recipe.Title}")" loading="lazy" class="d-flex img-fluid w-100 img-thumbnail img-recipe recipeImgFluidHeight" />
                                            </div>
                                        }

                                        count++;
                                    }
                                }
                            </div>
                            <a class="carousel-control-prev" href="#ViewRecipeCarousal" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#ViewRecipeCarousal" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                    <!-- Info -->
                    <div class="col-lg-6 pull-right">
                        <div class="recipe-info">
                            <h3>Info</h3>
                            <!-- Time -->
                            <div class="row recipe-info-row">
                                <div class="col-2 text-center">
                                    <i class="fa fa-clock-o" aria-hidden="true"></i>
                                </div>
                                <div class="col-6">Time</div>
                                <div class="col-4">3:00 H</div>
                            </div>
                            <!-- Difficulty -->
                            <div class="row recipe-info-row">
                                <div class="col-2 text-center">
                                    <i class="fa fa-area-chart" aria-hidden="true"></i>
                                </div>
                                <div class="col-6">Difficulty</div>
                                <div class="col-4">
                                    <i class="fa fa-star" aria-hidden="true"></i>
                                    <i class="fa fa-star" aria-hidden="true"></i>
                                    <i class="fa fa-star" aria-hidden="true"></i>
                                </div>
                            </div>
                            <!-- Serves -->
                            <div class="row recipe-info-row">
                                <div class="col-2 text-center">
                                    <i class="fa fa-users" aria-hidden="true"></i>
                                </div>
                                <div class="col-6">Servings</div>
                                <div class="col-4">5</div>
                            </div>

                            <!-- Chef -->
                            <div class="row recipe-info-row">
                                <div class="col-2 text-center">
                                    <i class="fa fa-female" aria-hidden="true"></i>
                                </div>
                                <div class="col-6">Recipe By</div>
                                <div class="col-4">Amna</div>
                            </div>

                            <div class="row">
                                <div class="col-12 mt-4 p-0">

                                    <blockquote class="blockquote blockquote-custom recipe-info-row-bg p-3">
                                        <div class="blockquote-custom-icon bg-ak shadow-sm"><i class="fa fa-quote-left text-white"></i></div>
                                        <p class="mb-0 mt-2 font-italic">
                                            @recipe.Description
                                        </p>
                                    </blockquote><!-- END -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Ingredients -->
            <div class="row">
                <div class="col-12">
                    <div class="recipe-ingredients">
                        <h3>Ingredients</h3>
                        <dl class="ingredients-list">
                            <dt>10</dt>
                            <dd>country-style pork ribs</dd>
                            <dt>2</dt>
                            <dd>tablespoons garlic powder</dd>
                            <dt>1</dt>
                            <dd>tablespoon salt</dd>
                            <dt>1</dt>
                            <dd>tablespoon pepper</dd>
                            <dt>2</dt>
                            <dd>cups of your favorite barbecue sauce</dd>
                        </dl>
                    </div>
                </div>
            </div>
            <!-- Directions -->
            <div class="row">
                <div class="col-12">
                    <div class="recipe-directions">
                        <h3>Directions</h3>
                        <ol>
                            <li>Preheat oven to 325.</li>
                            <li>Place ribs meaty side up in an ungreased baking dish.</li>
                            <li>Sprinkle with garlic powder, salt, and pepper.</li>
                            <li>Cover with foil and bake for 2 hours.</li>
                            <li>Drain liquid.</li>
                            <li>Brush ribs generously with BBQ sauce.</li>
                            <li>Bake uncovered for an additional 30 minutes in oven or on the BBQ.</li>
                            <li>Add more sauce half-way through.</li>
                        </ol>
                    </div>
                </div>
            </div>

            <!--Rating-->
            <div class="d-flex flex-row flex-wrap justify-content-center m-3">
                @if (string.IsNullOrEmpty(ratingMessage))
                {
                    <div class="pr-3 align-self-center">Have you prepared it? Please Rate </div>
                    <div class="rating">
                        <span @onclick="(() => Rate(5))">☆</span><span @onclick="(() => Rate(4))">☆</span><span @onclick="(() => Rate(3))">☆</span><span @onclick="(() => Rate(2))">☆</span><span @onclick="(() => Rate(1))">☆</span>
                    </div>
                }
                else
                {
                    <div class="pr-3 align-self-center">@ratingMessage</div>
                }

            </div>



            <!-- Back to recipes -->
            <div class="row">
                <div class="col-12 text-center mb-3">
                    <TelerikButton Icon="arrow-double-60-left" Class="bg-ak text-white" OnClick="@GobackClickHandler">Go to back to recipes.</TelerikButton>
                </div>
            </div>
        </div>
    </section>
}


@code
{
    [Parameter]
    public string Id { get; set; }

    public Recipe recipe { get; set; }

    public string ratingMessage { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (string.IsNullOrEmpty(Id))
        {
            navigationManager.NavigateTo("/");
        }

        try
        {
            recipe = await AbkFetchService.GetRecipeById(Convert.ToInt32(Id));
        }
        catch { }

        if (recipe == null)
        {
            toastService.ShowError("Failed to load recipe", $"Recipe Id {Id}");
            navigationManager.NavigateTo("/");
        }


    }


    async Task GobackClickHandler()
    {
        await JsRuntime.InvokeVoidAsync("goBack");
    }

    void Rate(int rateValue)
    {
        ratingMessage= $"Thank you for giving {rateValue} stars.";
    }
}
