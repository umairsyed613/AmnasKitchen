@page "/recipebycategory/{catId}"
@page "/recipebycategory/{catId}/{catName}"

@using ApnaBawarchiKhana.Shared
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AbkFetchService abkFetchService


    <section id="items" class="rounded mt-3 pt-2 pb-4 mb-4 animate__animated animate__fadeIn">
        <div class="row">
            <div class="col-12">
                <h2>@catName Recipes</h2>
            </div>
        </div>
        <hr />


        @if (isLoading)
        {
           <Loader/>
        }

        @if(!string.IsNullOrEmpty(ResponseMessage))
        {
            <h4 class="roboto alert alert-danger mt-3"> @ResponseMessage </h4>
        }

        @if (Recipes != null && Recipes.Any())
        {
            <div class="d-flex align-content-center justify-content-start flex-wrap animate__animated animate__slideInUp">
                @foreach (var recipe in Recipes)
                {
                    <div class="recipe-item card m-2 recipe-itemSize">
                        <a href="/viewrecipe/@recipe.RecipeId">
                            @if (recipe.Thumbnail != null)
                            {
                                <img src="data:image/bmp;base64, @(Convert.ToBase64String(recipe.Thumbnail))" alt="@($"{recipe.Title}")" loading="lazy" class="card-img-top recipeByCatThumb" />
                            }
                        </a>
                        <div class="card-body">
                            <div class="card-text p-2">
                                <div class="d-flex flex-row mb-2">
                                    <div class="flex-fill text-truncate roboto text-dark font-weight-bold">@recipe.Title</div>
                                    <div>
                                        <span class="roboto">@recipe.Ratings <i class="fa fa-star ratingStarSize" aria-hidden="true"></i></span>
                                        </div>
                                </div>

                                <div class="d-flex flex-row flex-fill">
                                    <span class="text-muted text-truncate roboto font-weight-normal">@recipe.Description</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

    </section>


@code {

    [Parameter]
    public string catId { get; set; }

    [Parameter]
    public string catName { get; set; }

    public bool isLoading { get; set; }

    public string ResponseMessage { get; set; }

    IEnumerable<RecipesListByCategory> Recipes;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (string.IsNullOrWhiteSpace(catId))
        {
            NavigationManager.NavigateTo("/", true);
        }
        isLoading = true;

        ResponseMessage = string.Empty;

        var id = Convert.ToInt32(catId);

        Recipes = null;

        Recipes = await abkFetchService.GetRecipesByCategoryId(id);

        isLoading= false;

        if (Recipes == null || !Recipes.Any())
        {
            ResponseMessage = "There are no recipes right now on this category.";
        }
    }

}
