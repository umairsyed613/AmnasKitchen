@page "/managecategory"


@using ApnaBawarchiKhana.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsInterop

<style>
    .catIconGrid {
        width: 48px !important;
        height: 48px !important;
    }
</style>

<section id="manageCategories">
    <h2>Manage Categories</h2>
    <hr />
    <div class="row pb-2 pt-2">
        <div class="col-12">
            <TelerikButton ButtonType="@ButtonType.Submit" OnClick="@MyClickHandler" Primary="false" Class="w-100">Create New Category</TelerikButton>
        </div>
    </div>

    <div class="row pb-5">
        <div class="col-12">
            @if (categories == null)
            {
                <div class="spinner-border text-success" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            }
            else
            {
                <TelerikGrid Data="@categories" Height="450px" OnDelete="@DeleteHandler"
                             Pageable="true" PageSize="4">
                    <GridColumns>
                        <GridColumn Field="@(nameof(Category.Id))" Width="70px" />
                        <GridColumn Field="@(nameof(Category.Name))" Title="Name" />
                        <GridColumn Field="@(nameof(Category.Description))" Title="Description" />
                        <GridColumn Field="@(nameof(Category.UploadedImage))" Title="Icon" Width="90px">
                            <Template>
                                @{
                                    var cat = context as Category;
                                }
                                @if (cat?.UploadedImage != null)
                                {
                                    <div class="category-item text-center">
                                        <img src="data:image/bmp;base64, @(Convert.ToBase64String(cat.UploadedImage?.ImageData))" alt="@($"{cat.Name}")" class="catIconGrid" />
                                    </div>
                                }
                            </Template>
                        </GridColumn>
                        <GridCommandColumn Width="70px">
                            <GridCommandButton Command="Delete" Icon="delete"></GridCommandButton>
                        </GridCommandColumn>
                    </GridColumns>
                </TelerikGrid>
            }

        </div>
    </div>
</section>
@code {
    IList<Category> categories;

    protected override async Task OnInitializedAsync()
    {

        categories = await Http.GetFromJsonAsync<IList<Category>>("api/Recipe/GetAllCategories");
    }

    public async Task DeleteHandler(GridCommandEventArgs args)
    {
        var category = (Category)args.Item;

        await Http.DeleteAsync($"api/Recipe/DeleteCategory/{category.Id}");
        categories.Remove(category);
    }

    protected void MyClickHandler()
    {
        NavigationManager.NavigateTo("/managecategory/createcategory");
    }

}